{
  "name": "septic-config",
  "displayName": "SEPTIC",
  "icon": "images/SEPTIC_logo.jfif",
  "description": "Provides snippets, syntax highlighting and multi-level folding in Septic config files.",
  "author": "Equinor ASA",
  "license": "MIT",
  "version": "1.21.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/equinor/vscode-septic"
  },
  "publisher": "EinarSIdso",
  "categories": [],
  "keywords": [
    "multi-root ready"
  ],
  "engines": {
    "vscode": "^1.85.0"
  },
  "activationEvents": [
    "onLanguage:septic"
  ],
  "main": "./client/out/extension",
  "contributes": {
    "commands": [
      {
        "command": "septic.detectCycles",
        "title": "Septic: Detect Cycles in Calcs"
      },
      {
        "command": "septic.opcTagList",
        "title": "Septic: List all OPC-Tags"
      },
      {
        "command": "septic.compareCnfg",
        "title": "Septic: Compare config versions"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Septic",
      "properties": {
        "septic.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VS Code and the language server."
        },
        "septic.documentation.version": {
          "scope": "window",
          "type": "string",
          "enum": [
            "latest",
            "v2.88",
            "v2.89",
            "v2.90"
          ],
          "default": "latest",
          "description": "Select which version of Septic to use for documentation and diagnostics."
        },
        "septic.diagnostics.enabled": {
          "scope": "window",
          "type": "boolean",
          "default": "true",
          "description": "Controls the publishing of diagnostics reports"
        },
        "septic.folding.calcModl": {
          "scope": "window",
          "type": "boolean",
          "default": "false",
          "description": "Sets the foldinglevel of CalcModl to level 1 when enabled."
        },
        "septic.formatting.enabled": {
          "scope": "window",
          "type": "boolean",
          "default": "false",
          "description": "Turns on formatting for cnfg files (Manually Shift+Alt+F or on save if enabled)."
        },
        "septic.ignored.paths": {
          "scope": "window",
          "type": "array",
          "default": [],
          "description": "Path(s) to files/folders that should be ignored when publishing diagnostics."
        },
        "septic.codeActions.insertEvrPosition": {
          "scope": "window",
          "type": "string",
          "enum": [
            "top",
            "bottom"
          ],
          "default": "bottom",
          "description": "Position of inserted Evr. Bottom = Above CalcModl, Top = Below DmmyAppl"
        }
      }
    },
    "languages": [
      {
        "id": "septic",
        "aliases": [
          "Septic"
        ],
        "extensions": [
          ".cnfg"
        ],
        "configuration": "./language-configuration.json"
      },
      {
        "id": "jinja",
        "aliases": [
          "Jinja Raw",
          "jinja-raw"
        ],
        "extensions": [],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "septic",
        "scopeName": "source.septic",
        "path": "./syntaxes/septic.tmLanguage.json"
      },
      {
        "language": "jinja",
        "scopeName": "source.jinja",
        "path": "./syntaxes/jinja.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "septic",
        "path": "snippets/snippets.json"
      }
    ],
    "configurationDefaults": {
      "[septic]": {
        "files.encoding": "windows1252",
        "editor.wordWrap": "on",
        "editor.insertSpaces": true
      }
    }
  },
  "nyc": {
    "extension": [
      ".ts",
      ".tsx"
    ],
    "exclude": [
      "coverage/",
      "**/*.test.ts",
      "**/test/util/*",
      "client/*",
      "server/src/contextManager.ts",
      "server/src/server.ts",
      "server/src/documentProvider.ts",
      "server/src/settings.ts",
      "server/src/protocol.ts",
      ".vscode-test/*",
      "**/index.ts"
    ],
    "reporter": [
      "html"
    ],
    "require": [
      "ts-node/register",
      "source-map-support/register"
    ],
    "all": true,
    "cache": false,
    "sourceMap": true,
    "instrument": true
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "clean": "rimraf ./server/out/public && rimraf ./client/out/test/fixtures",
    "copy-files": "copyfiles -u 2 ./server/src/public/** ./server/out",
    "copy-files-fixtures": "copyfiles -u 2 \"./client/src/test/fixtures/**/*\" ./client/out/",
    "compile": "tsc -b && npm run clean && npm run copy-files && npm run copy-files-fixtures",
    "watch": "tsc -b -w",
    "lint": "eslint ./client/src ./server/src --ext .ts,.tsx",
    "postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
    "e2e-test": "npm run compile && node ./client/out/test/runTest",
    "test": "mocha --require ts-node/register server/src/test/**/*.test.ts ",
    "test_with_coverage": "npm run compile && nyc mocha --require ts-node/register --require source-map-support/register --recursive server/src/test/**/*.test.ts "
  },
  "devDependencies": {
    "@types/chai": "4.3.16",
    "@types/mocha": "^10.0.7",
    "@types/node": "^16.18.112",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^6.20.0",
    "chai": "^4.5.0",
    "copyfiles": "^2.4.1",
    "eslint": "^8.57.0",
    "mocha": "^10.7.3",
    "nyc": "^15.1.0",
    "rimraf": "^5.0.5",
    "source-map-support": "^0.5.21",
    "ts-node": "^10.9.2",
    "typescript": "^5.4.5"
  }
}